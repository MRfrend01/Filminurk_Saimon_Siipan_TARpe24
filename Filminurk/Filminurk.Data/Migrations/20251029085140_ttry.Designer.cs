// <auto-generated />
using System;
using Filminurk.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Filminurk.Data.Migrations
{
    [DbContext(typeof(FilminurkTarpe24Context))]
    [Migration("20251029085140_ttry")]
    partial class ttry
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Filminurk.Core.Domain.FileToApi", b =>
                {
                    b.Property<Guid>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ExistingFilepath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsPoster")
                        .HasColumnType("bit");

                    b.Property<Guid?>("MovieID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ImageID");

                    b.ToTable("FilesToApi");
                });

            modelBuilder.Entity("Filminurk.Core.Domain.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Actors")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("CurrentRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Director")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DurationInMinutes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EntryCreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EntryModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FirstPublished")
                        .HasColumnType("date");

                    b.Property<DateTime?>("LastWatched")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PeopleWatched")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
